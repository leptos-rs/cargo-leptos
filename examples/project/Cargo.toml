[workspace]

[package]
name = "example"
version = "0.1.0"
edition = "2021"

[lib]
crate-type = ["cdylib", "rlib"]

# See more keys and their definitions at https://doc.rust-lang.org/cargo/reference/manifest.html


[dependencies]
leptos_router = { version = "0.6.7", default-features = false }
leptos = { version = "0.6.7", default-features = false }
leptos_meta = { version = "0.6.7", default-features = false }
leptos_dom = { version = "0.6.14", default-features = false }


gloo-net = { version = "0.4", features = ["http"] }
log = "0.4.17"
cfg-if = "1.0.0"

# dependecies for client (enable hydrate set)
wasm-bindgen = { version = "=0.2.93", optional = true }
console_log = { version = "1.0", optional = true }
console_error_panic_hook = { version = "0.1.7", optional = true }

# dependecies for server (enable when ssr set)
actix-files = { version = "0.6.2", optional = true }
actix-web = { version = "4.2.1", features = ["macros"], optional = true }
futures = { version = "0.3.25", optional = true }
simple_logger = { version = "4.0.0", optional = true }
serde_json = { version = "1.0.91", optional = true }
reqwest = { version = "0.12", features = ["json"], optional = true }
leptos_actix = { version = "0.6.7", optional = true }
# leptos_actix = { version = "0.1.0-beta", optional = true }
dotenvy = { version = "0.15.6", optional = true }

[profile.release]
codegen-units = 1
lto = true
opt-level = 'z'

[features]
default = ["ssr"]
hydrate = [
    "leptos/hydrate",
    "leptos_meta/hydrate",
    "leptos_router/hydrate",
    "dep:wasm-bindgen",
    "dep:console_log",
    "dep:console_error_panic_hook",
]
ssr = [
    "leptos/ssr",
    "leptos_meta/ssr",
    "leptos_router/ssr",
    "dep:leptos_actix",
    "dep:reqwest",
    "dep:actix-web",
    "dep:actix-files",
    "dep:futures",
    "dep:simple_logger",
    "dep:serde_json",
    "dep:dotenvy",
]


[package.metadata.leptos]
# The name used by wasm-bindgen/cargo-leptos for the JS/WASM bundle. Defaults to the crate name
output-name = "example"
# The site root folder is where cargo-leptos generate all output. WARNING: all content of this folder will be erased on a rebuild. Use it in your server setup.
site-root = "target/site"
# The site-root relative folder where all compiled output (JS, WASM and CSS) is written
# Defaults to pkg
site-pkg-dir = "pkg"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
style-file = "style/main.scss"
# [Optional] The source CSS file. If it ends with .sass or .scss then it will be compiled by dart-sass into CSS. The CSS is optimized by Lightning CSS before being written to <site-root>/<site-pkg>/app.css
tailwind-input-file = "style/tailwind.css"
# [Optional] Files in the asset-dir will be copied to the site-root directory
assets-dir = "assets"
# JS source dir. `wasm-bindgen` has the option to include JS snippets from JS files
# with `#[wasm_bindgen(module = "/js/foo.js")]`. A change in any JS file in this dir
# will trigger a rebuild.
js-dir = "js"
# [Optional] Additional files to watch
watch-additional-files = ["additional_files"]
# The IP and port (ex: 127.0.0.1:3000) where the server serves the content. Use it in your server setup.
site-address = "127.0.0.1:3000"
# The port to use for automatic reload monitoring
reload-port = 3001
# [Optional] Command to use when running end2end tests. It will run in the end2end dir.
end2end-cmd = "npx playwright test"
end2end-dir = "end2end"
#  The browserlist query used for optimizing the CSS.
browserquery = "defaults"
# The features to use when compiling the bin target
#
# Optional. Can be over-ridden with the command line parameter --bin-features
bin-features = ["ssr"]

# If the --no-default-features flag should be used when compiling the bin target
#
# Optional. Defaults to false.
bin-default-features = false

# The features to use when compiling the lib target
#
# Optional. Can be over-ridden with the command line parameter --lib-features
lib-features = ["hydrate"]

# If the --no-default-features flag should be used when compiling the lib target
#
# Optional. Defaults to false.
lib-default-features = false
env = "dev"

# Enables additional file hashes on outputted css, js, and wasm files
#
# Optional: Defaults to false. Can also be set with the LEPTOS_HASH_FILES=false env var
hash-files = true
